app.check = success
arms.alert.msg = 如有更多疑问，请联系
arms.alertServiceImpl.alertExpressionIncorrect = 报警规则的表达式错误, 请确认并修改表达式
arms.alertServiceImpl.alertNameEmpty = 报警名称不能为空
arms.alertServiceImpl.alertNameExist = 该报警名称已存在(全局唯一)，请您修改报警名称
arms.alertServiceImpl.alertNotExist = 报警不存在
arms.alertServiceImpl.deleteAlertNotExist = 您删除的告警不存在
arms.alertServiceImpl.systemAlert = 系统报警
arms.alertServiceImpl.taskIdWrong = 您的taskId有误
arms.alertServiceImpl.taskNotExist = 您找的任务不存在
arms.alertServiceImpl.thisAlertNotExist = 该报警不存在
arms.alertServiceImpl.updateAlertNotBelongToTask = 您修改的报警不属于该任务
arms.alertServiceImpl.beyondAlertRuleLimit = 报警规则数超过限制
arms.alertServiceImpl.updateAlertNotExist = 更新的告警不存在
arms.alertServiceImpl.updateAlertNotExist2 = 您修改的报警不存在
arms.alertServiceImpl.alarmDisplayTitle = 报警事件
arms.alertServiceImpl.alarmDisplayPhone = 接收报警手机号
arms.alertServiceImpl.alarmDisplayEMail = 接收报警邮箱地址
arms.alertServiceImpl.alarmDisplayDing = 接收报警钉钉号
arms.alertServiceImpl.alarmDisplaySLSSelf = 接收报警SLS配置
arms.alertServiceImpl.alarmDisplayDingRobot = 接收报警钉钉机器人地址
arms.alertServiceImpl.alarmDisplayContent = 报警内容
arms.alertServiceImpl.alarmName = 报警名称
arms.alertServiceImpl.filterCondition = 筛选条件
arms.alertServiceImpl.silenceWarning = 注意！该报警未收到恢复邮件之前，正在持续报警中，%s分钟后会再次提醒您！
arms.alertServiceImpl.recoveryWarning = 已经%s分钟没有报警，数据已经正常恢复
arms.alertServiceImpl.andLogic = 且
arms.alertServiceImpl.orLogic = 或
arms.alertServiceImpl.dimKey = 维度值
arms.prom.alert.name_repeat = 告警规则名称已存在，请修改告警规则名称
arms.prom.alert.cluster_id_error = 集群ID不存在
arms.prom.alert.user_error = 用户状态异常
arms.prom.alert.start_error = 告警规则启动失败
arms.prom.alert.delete.success = 删除成功
arms.prom.alert.delete.fail = 删除失败
arms.prom.alert.group.exist = 告警分组名称已存在
arms.prom.alert.save.as.template.success = 另存为告警规则模板成功
arms.alert.scheduler.task.error = 创建调度任务异常，请重新启动告警规则
arms.alert.scheduler.task.stop.error = 停止调度任务异常，请重新关闭告警规则
arms.alert.scheduler.task.start.is_running = 告警规则已经在运行中
arms.alert.scheduler.task.start.has_stop = 告警规则已经停止
arms.alert.scheduler.task.start.success = 启动成功
arms.alert.scheduler.task.start.fail = 启动失败
arms.alert.scheduler.task.chose.part1 = 选中
arms.alert.scheduler.task.chose.part2 = 条告警规则，成功
arms.alert.scheduler.task.chose.part3 = 条， 失败
arms.alert.scheduler.task.chose.part4 = 条
arms.prom.alert.template.exits = 已经使用此模板创建过告警规则，不进行更新。
arms.prom.alert.template.success = 通过模板创建告警规则成功
arms.prom.alert.template.not.exist = 告警模板不存在
arms.prom.alert.template.yaml.wrong = Yaml格式错误，请检查Yaml格式是否符合规范
arms.prom.alert.template.yaml.export_success = 导出成功
arms.prom.alert.template.yaml.export_failed = 导出失败

arms.prom.alert.template.fail = 创建时存在问题
arms.prom.alert.template.update.fail = 更新失败
arms.prom.alert.template.update.success = 更新成功

arms.alert.condition.rise = 上升
arms.alert.condition.decline = 下降
arms.alert.condition.equal = 等于
arms.alert.condition.noequal = 不等于
arms.alert.condition.greaterthan = 大于
arms.alert.condition.greaterorequalthan = 大于等于
arms.alert.condition.lessthan = 小于
arms.alert.condition.lessorequalthan = 小于等于
arms.alert.condition.level.fatal = 严重
arms.alert.condition.level.error = 错误
arms.alert.condition.level.warn = 警告
arms.alert.condition.level.info = 通知
arms.alert.condition.last = 最近
arms.alert.condition.mins = 分钟
arms.alert.condition.mom = 环比
arms.alert.condition.wow = 与上周同比
arms.alert.condition.dod = 与昨日同比
arms.alert.condition.hoh = 与上一小时同比
arms.alert.condition.checkresult = 检测结果
arms.alert.condition.continue = 连续
arms.alert.condition.ntimetrigger = 次检查
arms.alert.condition.pasttime = 过去
arms.alert.condition.triggered = 触发
arms.alert.condition.ntime = 次
arms.alert.condition.not = 未
arms.alert.condition.currentval = 最新值

arms.alert.template.name.repeat = 告警模板名称重复

arms.alert.condition.sum = 总和
arms.alert.condition.min = 最小值
arms.alert.condition.max = 最大值
arms.alert.condition.number = 计数值
arms.alert.condition.countdistict = 去重计数
arms.alert.condition.avg = 平均值
arms.alert.condition.quantile = 分位数
arms.alert.condition.logr = 日志merge
arms.alert.condition.rate = 速率
arms.alert.condition.csum = 每分钟的总和
arms.alert.condition.cavg = 每分钟的平均值
arms.alert.condition.cmax = 每分钟的最大值
arms.alert.condition.ccount = 每分钟的计数值

arms.alert.v2.parse.alertids.err = 报警ID列表解析错误，请输入JsonArray格式
arms.alert.v2.parse.alertconfigs.format.err = 报警规则配置解析错误，请输入JsonArray格式
arms.alert.v2.alertids.toolong = 报警ID列表太长，限制长度
arms.alert.v2.unknow.user = 未知用户
arms.alert.v2.alert.title.empty = 报警规则名称不能为空
arms.alert.v2.alert.title.toolong = 报警规则名称长度太长，不超过200字符
arms.alert.v2.alert.target.empty = 报警规则关联应用为空
arms.alert.v2.alert.target.toomany = 报警规则关联应用太多，个数不能超过

arms.contactService.configCantEmpty = 配置不能为空，联系人必须有一项联系方式
arms.contactService.contactUplimit = 联系人个数超过上限，请联系管理员
arms.contactService.emailIllegal = 邮箱不合法
arms.contactService.phoneIllegal = 手机号不合法
arms.contactService.sameEmail = 用户名下存在相同的邮箱
arms.contactService.samePhone = 用户名下存在相同的手机号
arms.contactService.webhook.urlnone = url为空
arms.contactService.noName = 名称不能为空
arms.contactService.nameTooLong64 = 名称太长，不能多于64字符
arms.datasetServiceImpl.datasetNotExist = 数据集不存在
arms.datasetServiceImpl.startFailed = 启动失败, 错误为 = 
arms.datasource.httpApi = HTTP数据源
arms.datasource.kafka = Kafka数据源
arms.datasource.lineLog = 云服务器ECS
arms.datasource.metaQSpec = MQ数据源
arms.datasource.slsApi = SDK数据源
arms.datasource.slsSelf = LogHub数据源
arms.datasource.starAgent = StarAgent
arms.datasource.starAgentQueqiao = 鹊桥数据源
arms.dimhelper.contentDuplicated = 文本内容中记录不能重复
arms.dimhelper.contentEmpty = 文本内容中包含空的记录
arms.dimhelper.fieldDuplicated = schema中字段不能重名
arms.dimhelper.fieldEmpty = schema中源字段或者目标字段为空
arms.dimhelper.inconsisentType = schema中数据类型与具体数据类型不一致
arms.dimhelper.notMatchSchema = 文本内容格式与schema不匹配
arms.dimhelper.urlErr = url配置错误
arms.dimhelper.urlRetCodeErr = url返回code非200
arms.dimhelper.wrongFormat = 文本内容格式错误
arms.ecsFlow.configNotAuthorized = 配置中包含无权限的数据源
arms.ecsFlow.ecsConfigError = ECS配置解析异常,请检查配置
arms.ecsFlow.jsonParseError = 解析json异常，请联系管理员
arms.ecsFlow.previewECSManage = ECS数据源管理
arms.ecsFlow.previewTip1 = 第一次预览创建资源需要耗费大约1分钟,请一分钟后重试
arms.ecsFlow.previewTip1minute. = 第一次预览创建资源需要耗费大约1分钟,请一分钟后重试
arms.ecsFlow.previewTip2 = 请检查目标机器是否已经安装Agent,前往
arms.ecsFlow.previewTip3 = 进行Agent安装与检测;
arms.ecsFlow.previewTip4 = 请确保日志文件中存在数据;
arms.ecsFlow.previewTip5 = 如果仍然无法拉取请联系管理员!
arms.ecsFlow.previewTip6 = 问题排查请参考
arms.ecsFlow.previewTip7 = 自定义监控数据源常见问题
arms.front.exportAlarm.alarmRuleExport = 报警规则导出
arms.front.exportAlarm.cancel = 关闭
arms.front.exportAlarm.duplicate = 复制
arms.regionbar.ap-south-1 = 印度（孟买）
arms.regionbar.ap-southeast-1 = 亚太东南（新加坡）
arms.regionbar.ap-southeast-2 = 澳大利亚（悉尼）
arms.regionbar.ap-southeast-3 = 马来西亚（吉隆坡）
arms.regionbar.ap-southeast-5 = 印度尼西亚（雅加达）
arms.regionbar.ap-northeast-1 = 日本（东京）
arms.regionbar.cn-beijing = 华北2（北京）
arms.regionbar.cn-zhangjiakou = 华北3（张家口）
arms.regionbar.cn-huhehaote = 华北5（呼和浩特）
arms.regionbar.cn-wulanchabu = 华北6（乌兰察布）
arms.regionbar.cn-hangzhou = 华东1（杭州）
arms.regionbar.cn-nanjing = 华东5（南京-本地地域）
arms.regionbar.cn-hangzhou-corp = 杭州内部生产1
arms.regionbar.cn-hongkong = 中国（香港）
arms.regionbar.cn-qingdao = 华北1（青岛）
arms.regionbar.cn-qingdao-publictest = 公网
arms.regionbar.cn-shanghai = 华东2（上海）
arms.regionbar.cn-shanghai-corp = 上海内部生产1
arms.regionbar.cn-shenzhen = 华南1（深圳）
arms.regionbar.cn-heyuan = 华南2（河源）
arms.regionbar.cn-guangzhou = 华南3（广州）
arms.regionbar.cn-chengdu = 西南1（成都）
arms.regionbar.us-west-1 = 美国（硅谷）
arms.regionbar.us-east-1 = 美国（弗吉尼亚）
arms.regionbar.eu-west-1 = 英国（伦敦）
arms.regionbar.eu-central-1 = 德国（法兰克福）
arms.regionbar.me-east-1 = 阿联酋（迪拜）
arms.regionbar.rus-west-1 = 俄罗斯（莫斯科）
arms.regionbar.cn-north-2-gov-1 = 政务云
arms.saving = 正在保存数据
arms.slsDatasourceProcessor.multiTaskSameFile = 多任务拉取同一个文件
arms.slsDatasourceProcessor.userNotAuthorized = 用户未授权
arms.taskService.batchOptFailed = 批量启停任务失败，taskId:
arms.taskService.batchOptFailed2 = 数据源为METAQ，不支持批量启停。
arms.taskService.configCantEmpty = 配置为空，请联系管理员
arms.taskService.configException = 配置文件解析异常
arms.taskService.createTaskFailed = 新建失败
arms.taskService.duplicatedTaskNotExist = 被复制的任务不存在
arms.taskService.failedToDeleteDataset = 任务包含的数据集删除失败
arms.taskService.nameOrConfigCantEmpty = 名称或者配置不能为空
arms.taskService.noPermission = 当前用户无权限获取该任务的配置
arms.taskService.notExist = 不存在
arms.taskService.sameRegionCantDuplicated1 = 同一Region任务名称不能重复
arms.taskService.sameRegionCantDuplicated2 = 同一Region任务不能重复
arms.taskService.sameStageToMultiStage = 同一个stage名称对应多个stage，请修复
arms.taskService.statusExcept = 最近一小时内 :出现异常
arms.taskService.statusHealthy = 最近一小时内 :健康
arms.taskService.taskId = 任务id
arms.taskService.taskNameCantEmpty = 任务名称不能为空
arms.taskService.taskNotExistOrRunningOrUserNotMatch = 任务不存在，用户不匹配，或者正在运行中
arms.taskService.templateNotExist = 模版不存在，请联系管理员
arms.taskStartStopStatus.abnormalAllocateResource = 资源分配异常,请联系管理员
arms.taskStartStopStatus.alarmConfigAbnormal = 报警设置异常,请检查报警配置
arms.taskStartStopStatus.datasetConfigNotExist = 数据源配置不存在或者数据源配置错误
arms.taskStartStopStatus.faileUploadRepeatField = 去重字段上传失败,请联系管理员
arms.taskStartStopStatus.failed = 失败
arms.taskStartStopStatus.failedCreateDatasource = 创建数据源失败,请联系管理员
arms.taskStartStopStatus.failedDatasourceUpload = 数据源配置上传失败,请联系管理员
arms.taskStartStopStatus.failedDeleteDataset = 数据集配置删除失败,请联系管理员
arms.taskStartStopStatus.failedDeleteEvent = 事件集集配置删除失败,请联系管理员
arms.taskStartStopStatus.failedGetSysParam = 无法获取系统参数,请联系管理员
arms.taskStartStopStatus.failedSplitRuleUpload = 切分规则上传失败,请联系管理员
arms.taskStartStopStatus.failedUploadDataset = 数据集配置上传失败,请联系管理员
arms.taskStartStopStatus.failedUploadEvent = 事件集配置上传失败,请联系管理员
arms.taskStartStopStatus.failedUploadSplitRule = 切分规则删除失败,请联系管理员
arms.taskStartStopStatus.noDataSet = 任务中没有配置数据集
arms.taskStartStopStatus.noDataSource = 当前Region任务中存在不支持的数据源,请新建任务并选择正确的Region!
arms.taskStartStopStatus.optTooFrequent = 操作太频繁,操作间隔不得低于15s
arms.taskStartStopStatus.permissionsAbnormal = 权限异常
arms.taskStartStopStatus.splitAndDatasetFieldNotMatch = 切分模型与数据集保存的字段不匹配
arms.taskStartStopStatus.splitLogicNotExist = 数据切分逻辑不存在
arms.taskStartStopStatus.succes = 成功
arms.taskStartStopStatus.taskNotExist = 任务不存在
arms.taskStartStopStatus.unableAllocateResource = 无法分配资源,请联系管理员
arms.video.title = 入门视频
arms.video.title2 = 查看视频教学
arms_vm_title = 应用实时监控服务ARMS
arms_vm_title_apm = 应用监控系统
xtrace_vm_title = 链路追踪
prometheus_vm_title = Prometheus监控
alerts_vm_title=告警运维中心
grafana_service_vm_title=Grafana服务
recode.hint.delete = 您确定要删除该站点吗
recode.hint.sitename = 请输入站点名称
recode.hint.sitename.length = 站点名称限制在20字以内
recode.project.del.error = 删除Project错误
recode.sitename = 站点名称
retcode.access = 一键接入AMRS前端监控平台
retcode.create = 新建应用站点
retcode.create2 = 创建我的第一个应用站点
retcode.error.configerr = 创建站点失败,系统配置异常
retcode.error.createsiteerr = 系统任务创建失败,站点无法创建
retcode.error.createsiteexist = 新建应用站点失败，该应用站点已存在!
retcode.error.deletesitefailed = 删除站点失败,系统配置异常
retcode.introduce = ARMS前端监控平台主打 Web 端体验数据监控，一键解决 Web 页面速度、页面稳定性、调用成功率、页面健康度的监测。
retcode.satisfaction = 满意度趋势
retcode.title = 前端监控
retcode.title2 = 前端性能监控
retcode.vm.loading = 加载中
retcode.vm.title = 应用实时监控服务ARMS-前端性能监控
tab.a3 = 应用日志监控
tab.agentList = Agent列表
tab.eventQuery = 多维查询
tab.appList = 应用列表
tab.callChainQuery = 调用链查询
tab.config = 配置管理
tab.config.contacts.contact = 联系人管理
tab.config.dimTables = 映射表管理
tab.customDatasourceManage = 自定义监控-数据源管理
tab.customMonitor = 自定义监控
tab.interactive.dashboards = 交互大盘管理
tab.interactive.dashboards2 = 交互大盘
tab.logSources = 日志源管理
tab.logSources.ecs.ecss = 云服务器ECS
tab.logSources.httpapi.httpapis = HTTP数据源
tab.logSources.mq = MQ数据源
tab.logSources.queqiao.queqiaos = 鹊桥数据源
tab.logSources.slsapi = SDK数据源
tab.logSources.slsself = LogHub数据源
tab.midware.deploy = 统一中间件云产品接入
tab.overview = 概览
tab.retcode = 前端性能监控
tab.tab.agentList = Agent列表
tab.task = 监控管理
tab.task.alarms.alarmManage = 报警管理
tab.task.alarms.alarmManage2 = 报警策略管理
tab.task.dataset.datasetManage = 数据集管理
tab.task.event.eventsManage = 事件集管理
tab.task.tasks = 监控任务管理
tab.taskDetail.dataset = 数据集详情
tab.taskDetail.overview = 监控任务详情
tab.taskDetail.stepDataflow = 任务运行详情
tab.title = 应用实时监控服务ARMS
tab.tracing = 应用监控
tab.xtrace.overview = 概要
tab.xtrace.applist = 应用列表
arms.alertServiceImpl.defaultRetcodeAlertSuffix = 前端监控默认报警
arms.alertServiceImpl.defaultAppHostAlertSuffix = 应用监控默认报警-主机监控报警
arms.alertServiceImpl.defaultAppExceptionAlertSuffix = 应用监控默认报警-异常调用报警
arms.alertServiceImpl.defaultAppDBAlertSuffix = 应用监控默认报警-数据库异常报警
arms.alertServiceImpl.defaultAppGCAlertSuffix = 应用监控默认报警-GC异常报警
arms.alertServiceImpl.defaultAppProcessAlertSuffix = 应用监控默认报警-进程异常报警
arms.alertServiceImpl.activeTraceAppAlertSuffix = 应用紧急事件报警
arms.alertServiceImpl.defaultContactSuffixKey = -系统默认生成
arms.alertServiceImpl.defaultConGroupNameKey = 系统生成默认报警联系人分组
arms.loghubFlow.loghubConfigException = LogHub配置解析异常,请检查配置
arms.loghubFlow.cantFetchLoghubSource = 无法获取该LogHub数据源,请检查配置
arms.loghubFlow.logFetchTimeout = 日志抓取超时,请确保目标LogHub存在数据!
arms.loghubFlow.loghubWriteTimeout = loghub日志写入超时!
arms.loghubFlow.jsonParseException = 解析json异常，请联系管理员
arms.loghubFlow.configNoPermission = 配置中包含无权限的数据源
arms.sdkFlow.sdkConfigException = SDK配置解析异常,请检查配置
arms.sdkFlow.cantGetSDKSource = 无法获取该SDK数据源,请检查配置
arms.sdkFlow.fetchTimeout = 日志抓取超时,请确保目标SDK存在数据!
arms.sdkFlow.jsonParseException = 解析json异常，请联系管理员
arms.sdkFlow.noPermission = 配置中包含无权限的数据源
arms.rpcType.app = 移动端
arms.rpcType.httpEntry = HTTP入口
arms.rpcType.invokeHTTP = 调用 HTTP
arms.rpcType.invokeHSF = 调用 HSF
arms.rpcType.provideHSF = 提供 HSF
arms.rpcType.invokeLocalAPI = 调用本地API
arms.rpcType.invokeAsync = 异步调用
arms.rpcType.invokeSEQUOIADB = 调用 SEQUOIADB
arms.rpcType.invokeGBASE = 调用 GBASE
arms.rpcType.invokeGAUSSDB = 调用 GAUSSDB
arms.rpcType.invokeKINGBASE = 调用 KINGBASE
arms.rpcType.invokeINFUXDB = 调用 INFUXDB 
arms.rpcType.invokeCLICKHOUSE = 调用 CLICKHOUSE
arms.rpcType.invokeMYSQL = 调用 MYSQL
arms.rpcType.invokeMARIADB = 调用 MARIADB
arms.rpcType.invokePPAS = 调用 PPAS
arms.rpcType.invokeSQLSERVER = 调用 SQLSERVER
arms.rpcType.invokeORACLE = 调用 ORACLE
arms.rpcType.invokePOSTGRESQL = 调用 POSTGRESQL
arms.rpcType.invokeREDIS = 调用 REDIS
arms.rpcType.invokeOCEANBASE = 调用 OCEANBASE
arms.rpcType.invokeMEMCACHED = 调用 MEMCACHED
arms.rpcType.invokeDMDB = 调用 达梦数据库
arms.rpcType.invodeTDDL = 调用 TDDL
arms.rpcType.invokeTAIR = 调用 TAIR
arms.rpcType.invokeELASTICSEARCH = 调用 ELASTICSEARCH
arms.rpcType.invokeKUDU= 调用 KUDU
arms.rpcType.sendMQ = 发送 MQ消息
arms.rpcType.recMQ = 接收 MQ消息
arms.rpcType.sendKafka = 发送 Kafka消息
arms.rpcType.recKafka = 接收 Kafka消息
arms.rpcType.sendNotify = 发送 NOTIFY
arms.rpcType.recNotify = 接收 NOTIFY
arms.rpcType.invokeDUBBO = 调用 DUBBO
arms.rpcType.provideDUBBO = 提供 DUBBO
arms.rpcType.invokeDSF = 调用 DSF
arms.rpcType.provideDSF = 提供 DSF
arms.rpcType.invokeMONGODB = 调用 MONGODB
arms.rpcType.invokeGRPC = 调用 GRPC
arms.rpcType.provideGRPC = 提供 GRPC
arms.rpcType.invokeTHRIFT = 调用 THRIFT
arms.rpcType.provideTHRIFT = 提供 THRIFT
arms.rpcType.unknowRPCType = 未知调用
arms.rpcType.customMethod = 自定义方法
arms.rpcType.client = 客户端
arms.rpcType.server = 服务端
arms.rpcType.producer = 发布端
arms.rpcType.consumer = 订阅端
arms.rpcType.db = 数据库
arms.rpcType.xtraceOther = 内部调用
arms.rpcType.front = 前端
arms.rpcType.kubernetes = Kubernetes pod metadata
arms.rpcType.anyType = 任意
arms.rpcType.invokeSOFA = 调用 SOFA
arms.rpcType.provideSOFA = 提供 SOFA
arms.rpcType.schedulerx = SchedulerX
arms.rpcType.xxljob = XXL-JOB
arms.rpcType.jdkTimer = JDK-TIMER
arms.rpcType.getDBConnection = 获取数据库连接
arms.rpcType.springScheduled = Scheduled
arms.rpcType.quartz =  Quartz
arms.rpcType.elasticjob = Elastic-Job

arms.staskProvider.installed = 已安装
arms.sls.disable = 没有开通SLS服务
arms.kafka.createFailed = 创建Kafka资源失败，请求resource controller失败
arms.kafka.endpointNotFound = 创建资源失败，不能获取resource controller的地址
arms.streaming.disable = Streaming相关资源未就绪
arms.diamond.pushFailed = 更新配置失败，请联系管理员
arms.diamond.deleteFailed = 删除配置失败，请联系管理员
arms.agentStatusType.notInstalled = 未安装
arms.agentStatusType.installed = 已安装
arms.agentStatusType.unknow = 未知
arms.agentStatusType.exist = 存在
arms.agentStatusType.notExist = 不存在
arms.tracePredefinedKeys.none = 无
arms.trace.runtimeFormat = %s天%s小时%s分
arms.predefineMetrics.pageSatisfaction = 页面满意度
arms.predefineMetrics.pageMetric = 页面指标
arms.predefineMetrics.pageName = 页面名称
arms.predefineMetrics.pageView = 页面访问量
arms.predefineMetrics.pageRenderTime = 页面首次渲染耗时
arms.predefineMetrics.jsErrorRate = JS错误率
arms.predefineMetrics.jsErrorCount = JS错误数
arms.predefineMetrics.apiSuccessRate = API成功率
arms.predefineMetrics.apiMetric = API指标
arms.predefineMetrics.apiName = API名称
arms.predefineMetrics.apiRequestCount = API请求次数
arms.predefineMetrics.customStatisticsSum = 自定义上报求和
arms.predefineMetrics.customStatisticsMetric = 自定义指标
arms.predefineMetrics.customStatisticsKey = 自定义key
arms.predefineMetrics.customStatisticsAverage = 自定义上报均值
arms.predefineMetrics.pageApiMetric = 页面API指标
arms.predefineMetrics.page = 页面
arms.predefineMetrics.interfaceMetric = 应用调用统计
arms.predefineMetrics.callTypeMetric = 应用调用类型统计
arms.predefineMetrics.exceptionMetric = 异常接口调用
arms.predefineMetrics.interfaceName = 接口名称
arms.predefineMetrics.invocationType = 接口调用类型
arms.predefineMetrics.databaseMetric = 数据库指标
arms.predefineMetrics.sqlMetric = SQL指标
arms.predefineMetrics.sql = sql语句
arms.predefineMetrics.databaseName = 数据库名称
arms.predefineMetrics.jvmMonitoring = JVM监控
arms.predefineMetrics.ip = 机器ip
arms.predefineMetrics.hostMonitoring = 主机监控
arms.heap.dumping = 获取数据中，请稍后
arms.heap.parsing = 解析数据中，请稍后
arms.heap.fail = 拉取内存快照失败，请联系管理员
arms.heap.no.region = 未发现区域:
arms.heap.check.version = agent版本过低，请升级到版本到2.4.3或者更高
arms.heap.check.frequently = 内存dump操作太频繁，请稍后操作
arms.exception.requestId = 请求唯一标示为
arms.exception.InsufficientPermissions = 您权限不足，请申请对应权限后重试!
arms.exception.systemException = 系统出现故障，请联系管理员
arms.exception.goToFrontPage = 请访问ARMS的主页,如果有问题请联系管理员
arms.predefineMetrics.txn_rt = 调用响应时间
arms.predefineMetrics.txn_count = 调用次数
arms.predefineMetrics.txn_errcount = 调用错误次数
arms.predefineMetrics.slowsql_rt = 数据库调用响应时间
arms.predefineMetrics.slowsql_count = 数据库调用次数
arms.predefineMetrics.slowsql_errcount = 数据库调用错误次数
arms.predefineMetrics.db_rt = 数据库调用响应时间
arms.predefineMetrics.db_count = 数据库调用次数
arms.predefineMetrics.db_errcount = 数据库调用错误次数
arms.predefineMetrics.jvm_heap_total = JVM堆内总内存量
arms.predefineMetrics.jvm_heap_used_byte = JVM堆内使用内存量
arms.predefineMetrics.jvm_heap_total_byte = JVM堆内总内存量
arms.predefineMetrics.jvm_non_heap_used_byte = JVM非堆总使用内存量
arms.predefineMetrics.jvm_non_heap_max_byte = JVM非堆内存最大值
arms.predefineMetrics.jvm_non_heap_init_byte = JVM非堆内存初始值
arms.predefineMetrics.jvm_non_heap_committed_byte = JVM非堆内存提交值
arms.predefineMetrics.jvm_GcPsScavengeCount = JVM垃圾回收次数
arms.predefineMetrics.jvm_GcPsMarkSweepCount = JVM标记清除次数
arms.predefineMetrics.jvm_GcG1OldGenCount = JVM_Old区G1GC次数
arms.predefineMetrics.jvm_GcG1YoungGenCount = JVM_Young区G1GC次数
arms.predefineMetrics.jvm_ThreadCount = JVM_线程总数
arms.predefineMetrics.jvm_SystemCpuUser = 节点机用户使用CPU
arms.predefineMetrics.jvm_SystemMemFree = 节点机空闲内存
arms.predefineMetrics.jvm_SystemDiskFree = 节点机空闲磁盘
arms.predefineMetrics.jvm_SystemNetInErrs = 节点机接收错误报文数
arms.predefineMetrics.jvm_SystemNetOutErrs = 节点机发送错误报文数
arms.predefineMetrics.jvm_SystemLoad = 节点机系统负载
arms.predefineMetrics.jvm_YoungGcCount = JVM_YoungGC累计次数
arms.predefineMetrics.jvm_OldGcCount = JVM_FullGC累计次数
arms.predefineMetrics.jvm_YoungGcTime = JVM_YoungGC累计耗时
arms.predefineMetrics.jvm_OldGcTime = JVM_FullGC累计耗时
arms.predefineMetrics.jvm_YoungGcCount_Instant = JVM_YoungGC次数
arms.predefineMetrics.jvm_OldGcCount_Instant = JVM_FullGC次数
arms.predefineMetrics.jvm_YoungGcTime_Instant = JVM_YoungGC耗时
arms.predefineMetrics.jvm_OldGcTime_Instant = JVM_FullGC耗时
arms.predefineMetrics.exception_rt = 应用异常接口调用响应时间
arms.predefineMetrics.exception_count = 应用异常接口调用次数
arms.predefineMetrics.httpMonitoring = HTTP入口监控
arms.predefineMetrics.hsfMonitoring = HSF服务监控
arms.predefineMetrics.logMonitoring = 异常日志
arms.predefineMetrics.inbound_rt = 应用提供服务调用响应时间
arms.predefineMetrics.inbound_count = 应用提供服务调用次数
arms.predefineMetrics.inbound_errRate = 应用提供服务调用错误率
arms.predefineMetrics.outbound_rt = 应用依赖服务调用响应时间
arms.predefineMetrics.outbound_count = 应用依赖服务调用次数
arms.predefineMetrics.outbound_errRate = 应用依赖服务调用错误率
arms.predefineMetrics.service = 服务
arms.tlogLocalRun.splitterException = 自定义切分逻辑配置不正确，请检查您的配置！
arms.prom.dashboard.name.suffix = 监控大盘
arms.prom.exporter.node.name = 主机监控组件
arms.prom.exporter.node.describe = 主机监控组件，Kubernetes环境下集群所有节点的基础性能指标监控，采集节点机基础性能指标，包括CPU、内存、系统负载、磁盘使用量、网络情况等。
arms.prom.exporter.k8s-metric.name = Kubernetes集群监控组件
arms.prom.exporter.k8s-metric.describe = Kubernetes集群监控组件，监控Kubernetes集群指标，包括kubelet、kube-state-metric、api-server等核心指标。可按Deployment、Daemonset、Stateful等视角查看具体监控指标。
arms.prom.db.name.node.overview = 主机详情
arms.prom.db.name.k8s.deploy = Kubernetes部署
arms.prom.db.name.k8s.overview = Kubernetes概览
arms.prom.db.name.k8s.pod = Kubernetes容器副本
arms.alarm.active.content.eventType = 紧急报警
arms.alarm.active.content.appNameKey = 应用名 = 
arms.alarm.active.content.regionIdKey = Region = 
arms.alarm.active.content.infoKey = 异常信息 = 
arms.alarm.active.content.stopAlert = 报警规则停止中, 未触发事件, 
arms.alarm.active.content.oom = 内存溢出
arms.alarm.active.content.deadlock = 死锁
arms.alarm.active.content.offline = 进程停止
arms.alarm.active.content.diskfull = 磁盘用尽
arms.common.appNameKey = 应用名 = 
arms.common.nickNameKey = 应用别名 = 

arms.metric.alias.appstat.sql.rt = 数据库调用响应时间
arms.metric.alias.appstat.sql.count = 数据库调用次数
arms.metric.alias.appstat.sql.error = 数据库调用错误次数
arms.metric.alias.appstat.incall.rt = 应用提供服务调用响应时间
arms.metric.alias.appstat.incall.count = 应用提供服务调用次数
arms.metric.alias.appstat.incall.errorrate = 应用提供服务调用错误率
arms.metric.alias.appstat.outcall.rt = 应用依赖服务调用响应时间
arms.metric.alias.appstat.outcall.count = 应用依赖服务调用次数
arms.metric.alias.appstat.outcall.errorrate = 应用依赖服务调用错误率
arms.metric.alias.appstat.database.rt = 数据库调用响应时间
arms.metric.alias.appstat.database.count = 数据库调用次数
arms.metric.alias.appstat.database.errcount = 数据库调用错误次数
arms.metric.alias.appstat.jvm.heap_total = JVM堆内总内存量
arms.metric.alias.appstat.jvm.heap_used = JVM堆内使用内存量
arms.metric.alias.appstat.jvm.gcpsscavengecount = JVM垃圾回收次数
arms.metric.alias.appstat.jvm.gcpsmarksweepcount = JVM标记清除次数
arms.metric.alias.appstat.jvm.gcg1oldgencount = JVM_Old区G1_GC次数
arms.metric.alias.appstat.jvm.gcg1younggencount = JVM_Young区G1_GC次数
arms.metric.alias.appstat.jvm.gc.younggccountinstant = JVM_YoungGC次数(瞬时值)
arms.metric.alias.appstat.jvm.gc.oldgccountinstant = JVM_FullGC次数(瞬时值)
arms.metric.alias.appstat.jvm.gc.younggctimeinstant = JVM_YoungGC耗时(瞬时值)
arms.metric.alias.appstat.jvm.gc.oldgctimeinstant = JVM_FullGC耗时(瞬时值)
arms.metric.alias.appstat.jvm.threadcount = JVM线程总数
arms.metric.alias.appstat.jvm.non_heap_used = JVM非堆总使用内存量
arms.metric.alias.appstat.jvm.non_heap_max = JVM非堆内存最大值
arms.metric.alias.appstat.jvm.non_heap_init = JVM非堆内存初始值
arms.metric.alias.appstat.jvm.non_heap_committed = JVM非堆内存提交值
arms.metric.alias.appstat.jvm.heapusedratio = JVM堆内存使用率

arms.metric.alias.appstat.jvm.threadblockedcount = JVM阻塞线程数
arms.metric.alias.appstat.jvm.threadtimedwaitcount = JVM超时等待线程数
arms.metric.alias.appstat.jvm.threaddeadlockcount = JVM死锁线程数
arms.metric.alias.appstat.jvm.threadnewcount = JVM新建线程数
arms.metric.alias.appstat.jvm.threadrunnablecount = JVM可运行线程数
arms.metric.alias.appstat.jvm.threadterminatedcount = JVM终结线程数
arms.metric.alias.appstat.jvm.threadwaitcount = JVM等待线程数

arms.metric.alias.appstat.jvm.systemcpuuser = 节点机CPU用户态占用率
arms.metric.alias.appstat.jvm.systemcpuusage = 节点机CPU利用率
arms.metric.alias.appstat.jvm.systemnetinpackets = 节点机接收的报文数
arms.metric.alias.appstat.jvm.systemnetoutpackets = 节点机发送的报文数
arms.metric.alias.appstat.jvm.systemnetinbytes = 节点机接收的字节数
arms.metric.alias.appstat.jvm.systemnetoutbytes = 节点机发送的字节数
arms.metric.alias.appstat.jvm.systemmemfree = 节点机空闲内存
arms.metric.alias.appstat.jvm.systemmemusage = 节点机内存利用率
arms.metric.alias.appstat.jvm.systemdiskfree = 节点机空闲磁盘
arms.metric.alias.appstat.jvm.systemdiskusage = 节点机磁盘利用率
arms.metric.alias.appstat.jvm.systemnetinerrs = 节点机接收错误报文数
arms.metric.alias.appstat.jvm.systemnetouterrs = 节点机发送错误报文数
arms.metric.alias.appstat.jvm.systemload = 节点机系统负载

arms.metric.alias.appstat.host.instancecount = JVM实例数
arms.metric.alias.appstat.infra.sae.systemcpu = CPU使用率
arms.metric.alias.appstat.infra.sae.systemload = 系统负载
arms.metric.alias.appstat.infra.sae.systemmemused = 已用内存
arms.metric.alias.appstat.infra.sae.systemmemtotal = 总内存
arms.metric.alias.appstat.infra.sae.systemnetrecv =  网络接收字节
arms.metric.alias.appstat.infra.sae.systemnettran = 网络发送字节
arms.metric.alias.appstat.infra.sae.systemnetrecvpacket = 网络接收数据包
arms.metric.alias.appstat.infra.sae.systemnettranpacket = 网络发送数据包
arms.metric.alias.appstat.infra.sae.systemnetrecvdrop = 网络接收数据丢包
arms.metric.alias.appstat.infra.sae.systemnettrandrop = 网络发送数据丢包
arms.metric.alias.appstat.infra.sae.systemnetrecverror = 网络接收错误数据包
arms.metric.alias.appstat.infra.sae.systemnettranerror = 网络发送错误数据包
arms.metric.alias.appstat.infra.sae.systemdiskused = 磁盘使用量
arms.metric.alias.appstat.infra.sae.systemdisktotal = 磁盘总量
arms.metric.alias.appstat.infra.sae.systemdiskiopsread = 磁盘IOPS读
arms.metric.alias.appstat.infra.sae.systemdiskiopswrite = 磁盘IOPS写
arms.metric.alias.appstat.infra.sae.systemdiskread = 磁盘IO吞吐率读
arms.metric.alias.appstat.infra.sae.systemdiskwrite = 磁盘IO吞吐率写
arms.metric.alias.appstat.infra.sae.systemmemrate = 内存使用率
arms.metric.alias.appstat.infra.sae.systemdiskrate = 磁盘使用率
arms.metric.alias.appstat.exception.rt = 应用异常接口调用响应时间
arms.metric.alias.appstat.exception.count = 应用异常接口调用次数
arms.metric.alias.appstat.status.4xx = HTTP接口状态码4xx调用次数
arms.metric.alias.appstat.status.5xx = HTTP接口状态码5xx调用次数

arms.metric.alias.appstat.threadpool.threadcorepoolsize = 核心线程数
arms.metric.alias.appstat.threadpool.threadmaxpoolsize = 最大线程数
arms.metric.alias.appstat.threadpool.threadpoolactivecount = 活跃线程数
arms.metric.alias.appstat.threadpool.threadpoolqueuesize = 队列大小
arms.metric.alias.appstat.threadpool.threadpoolsize = 当前线程数
arms.metric.alias.appstat.threadpool.threadpooltaskcount = 已执行任务数
arms.metric.alias.appstat.threadpool.threadpoolusedpercent = 线程池使用率

arms.metric.alias.appstat.scheduler.rt = 运行时间
arms.metric.alias.appstat.scheduler.count = 运行次数
arms.metric.alias.appstat.scheduler.error = 运行异常次数
arms.metric.alias.appstat.scheduler.delay = 调度延迟时间

arms.metric.alias.webstat.satisfy.satisfy = 页面满意度
arms.metric.alias.webstat.index.pv = 页面访问量
arms.metric.alias.webstat.jserror.rate = JS错误率
arms.metric.alias.webstat.jserror.count = JS错误数
arms.metric.alias.webstat.msg.top.error_uv = JS错误影响用户数
arms.metric.alias.webstat.speed.avg_fpt = 页面首次渲染耗时
arms.metric.alias.webstat.speed.avg_fmp = 页面首屏时间
arms.metric.alias.webstat.speed.avg_tti = 页面首次可交互时间
arms.metric.alias.webstat.speed.avg_ready = ready时间
arms.metric.alias.webstat.speed.avg_load = 页面完全加载时间
arms.metric.alias.webstat.speed.avg_dns = 页面dns查询时间
arms.metric.alias.webstat.speed.avg_tcp = 页面tcp连接时间
arms.metric.alias.webstat.speed.avg_ssl = 页面ssl建连时间
arms.metric.alias.webstat.speed.avg_ttfb = 页面网络请求响应时间
arms.metric.alias.webstat.speed.avg_trans = 页面内容传输时间
arms.metric.alias.webstat.speed.avg_dom = 页面dom解析时间
arms.metric.alias.webstat.speed.avg_res = 页面资源加载时间
arms.metric.alias.webstat.speed.avg_cfpt = 页面自定义首屏时间
arms.metric.alias.webstat.speed.avg_ctti = 页面自定义可交互时间
arms.metric.alias.webstat.speed.avg_t1 = 页面自定义t1时间
arms.metric.alias.webstat.speed.avg_t2 = 页面自定义t2时间
arms.metric.alias.webstat.speed.avg_t3 = 页面自定义t3时间
arms.metric.alias.webstat.speed.avg_t4 = 页面自定义t4时间
arms.metric.alias.webstat.speed.avg_t5 = 页面自定义t5时间
arms.metric.alias.webstat.speed.avg_t6 = 页面自定义t6时间
arms.metric.alias.webstat.speed.avg_t7 = 页面自定义t7时间
arms.metric.alias.webstat.speed.avg_t8 = 页面自定义t8时间
arms.metric.alias.webstat.speed.avg_t9 = 页面自定义t9时间
arms.metric.alias.webstat.speed.avg_t10 = 页面自定义t10时间
arms.metric.alias.webstat.api.detail.success_rate = API成功率
arms.metric.alias.webstat.api.detail.count = API请求次数
arms.metric.alias.webstat.api.detail.success_time = API成功耗时
arms.metric.alias.webstat.api.detail.fail_time = API失败耗时
arms.metric.alias.webstat.sum.sum_val = 自定义上报求和
arms.metric.alias.webstat.avg.avg_val = 自定义上报均值
arms.metric.alias.appstat.transaction.rt = 调用响应时间
arms.metric.alias.appstat.transaction.count = 调用次数
arms.metric.alias.appstat.transaction.error = 调用错误次数
arms.metric.alias.appstat.transaction.errorrate = 调用错误率
arms.metric.alias.webstat.api.detail.page_api.count = API请求次数
arms.metric.alias.webstat.api.detail.page_api.success_rate = API成功率
arms.metric.alias.webstat.api.detail.page_api.success_time = API成功耗时
arms.metric.alias.webstat.api.detail.page_api.fail_time = API失败耗时

arms.metric.alias.webstat.api.detail.page_api.fail_uv = 报错API的影响用户数
arms.metric.alias.webstat.api.detail.fail_uv = 报错API的影响用户数

arms.metric.alias.webstat.resource.sum = 资源错误数

arms.metric.alias.webstat.custom_query.count = 样本量
arms.metric.alias.webstat.custom_query.pv.pv = PV
arms.metric.alias.webstat.custom_query.pv.uv = UV
arms.metric.alias.webstat.custom_query.perf.avg_fpt = 首次渲染
arms.metric.alias.webstat.custom_query.perf.avg_ready = DOM Ready
arms.metric.alias.webstat.custom_query.perf.avg_load = 页面完全加载
arms.metric.alias.webstat.custom_query.perf.avg_dns = DNS查询
arms.metric.alias.webstat.custom_query.perf.avg_tcp = TCP连接
arms.metric.alias.webstat.custom_query.perf.avg_ssl = SSL连接时间
arms.metric.alias.webstat.custom_query.perf.avg_ttfb = 请求响应
arms.metric.alias.webstat.custom_query.perf.avg_trans = 内容传输
arms.metric.alias.webstat.custom_query.perf.avg_dom = DOM解析
arms.metric.alias.webstat.custom_query.perf.avg_res = 资源加载
arms.metric.alias.webstat.custom_query.perf.avg_tti = 首次可交互
arms.metric.alias.webstat.custom_query.perf.avg_fmp = 首屏时间
arms.metric.alias.webstat.custom_query.perf.avg_cfpt = 自定义首屏
arms.metric.alias.webstat.custom_query.perf.avg_ctti = 自定义首次可交互
arms.metric.alias.webstat.custom_query.perf.avg_t1 = 自定义性能t1
arms.metric.alias.webstat.custom_query.perf.avg_t2 = 自定义性能t2
arms.metric.alias.webstat.custom_query.perf.avg_t3 = 自定义性能t3
arms.metric.alias.webstat.custom_query.perf.avg_t4 = 自定义性能t4
arms.metric.alias.webstat.custom_query.perf.avg_t5 = 自定义性能t5
arms.metric.alias.webstat.custom_query.perf.avg_t6 = 自定义性能t6
arms.metric.alias.webstat.custom_query.perf.avg_t7 = 自定义性能t7
arms.metric.alias.webstat.custom_query.perf.avg_t8 = 自定义性能t8
arms.metric.alias.webstat.custom_query.perf.avg_t9 = 自定义性能t9
arms.metric.alias.webstat.custom_query.perf.avg_t10 = 自定义性能t10
arms.metric.alias.webstat.custom_query.api.api_rate = API 成功率
arms.metric.alias.webstat.custom_query.api.api_count = API 请求次数
arms.metric.alias.webstat.custom_query.api.avg_api_time = API 耗时
arms.metric.alias.webstat.custom_query.api.api_success_count = 调用成功次数
arms.metric.alias.webstat.custom_query.api.api_fail_count = 调用失败次数
arms.metric.alias.webstat.custom_query.api.api_success_time = API 成功耗时
arms.metric.alias.webstat.custom_query.api.api_fail_time = API 失败耗时
arms.metric.alias.webstat.custom_query.api.api_uv = API 影响用户数
arms.metric.alias.webstat.custom_query.health.error_rate = JS错误率
arms.metric.alias.webstat.custom_query.error.error_count = JS错误数
arms.metric.alias.webstat.custom_query.error.error_uv = 影响用户数
arms.metric.alias.webstat.custom_query.resourceerror.resourceerror_count = 资源错误数
arms.metric.alias.webstat.custom_query.sum.sum_val = 自定义求和值
arms.metric.alias.webstat.custom_query.sum.sum_pv = 自定义求和PV
arms.metric.alias.webstat.custom_query.sum.sum_uv = 自定义求和UV
arms.metric.alias.webstat.custom_query.avg.avg_val = 自定义均值
arms.metric.alias.webstat.custom_query.avg.avg_pv = 自定义均值PV
arms.metric.alias.webstat.custom_query.avg.avg_uv = 自定义均值UV


arms.metric.dimplan.ALL = 遍历应用
arms.metric.dimplan.DISABLED = 应用中
arms.metric.dimplan.DISABLED.suffix = 整体求平均
arms.metric.dimplan.DIY.prefix = 指定应用中
arms.metric.dimplan.separator = 、

arms.metric.agg.opt.alias.avg = 平均
arms.metric.agg.opt.alias.sum = 求和
arms.metric.agg.opt.alias.max = 最大值
arms.metric.agg.opt.alias.min = 最小值
arms.metric.agg.opt.alias.avg_weighted = 平均

arms.metric.unit.alias.count = 次
arms.metric.unit.alias.number = 个
arms.metric.unit.alias.ms = 毫秒
arms.metric.unit.alias.percent = %
arms.metric.unit.alias.decimal_percent = %
arms.metric.unit.alias.byte = Byte
arms.metric.unit.alias.mebibyte = MB
arms.metric.unit.alias.kibibyte = KB
arms.metric.unit.alias.cps = cps

arms.metricgroup.alias.page = 页面指标
arms.metricgroup.alias.api = API指标
arms.metricgroup.alias.custom = 自定义指标
arms.metricgroup.alias.page.api = 页面API指标
arms.metricgroup.alias.webstat_custom_query = 多维指标

arms.metricdim.alias.page.page = 页面名称
arms.metricdim.alias.api.api = API名称
arms.metricdim.alias.custom.key = 自定义key
arms.metricdim.alias.page.api.page = 页面名称
arms.metricdim.alias.page.api.api = API名称

arms.metricgroup.alias.txn = 应用调用统计
arms.metricgroup.alias.txn_db = SQL指标
arms.metricgroup.alias.txn_type = 应用调用类型统计
arms.metricgroup.alias.db = 数据库指标
arms.metricgroup.alias.jvm = JVM监控
arms.metricgroup.alias.host = 主机监控
arms.metricgroup.alias.saehost = SAE主机监控
arms.metricgroup.alias.exception = 异常接口调用
arms.metricgroup.alias.threadpool = 线程池监控
arms.metricgroup.alias.scheduler = 定时任务
arms.metricgroup.alias.httpcode = HTTP状态码异常

arms.metricdim.alias.txn.rpc = 接口名称
arms.metricdim.alias.txn_db.sqlid = SQL语句
arms.metricdim.alias.txn_type.rpctype = 接口调用类型
arms.metricdim.alias.db.endpoint = 数据库名称
arms.metricdim.alias.jvm.rootip = 节点机IP
arms.metricdim.alias.host.rootip = 节点机IP
arms.metricdim.alias.host.instanceid = 实例ID
arms.metricdim.alias.saehost.instanceid = 实例ID
arms.metricdim.alias.exception.rpc = 接口名称
arms.metricdim.alias.exception.excepname = 异常名称
arms.metricdim.alias.httpcode.rpc = 接口名称
arms.metricdim.alias.threadpool.threadpooltype = 线程池类型
arms.metricdim.alias.threadpool.threadpoolname = 线程池名字
arms.metricdim.alias.threadpool.rootip = 节点机IP
arms.metricdim.alias.scheduler.rpc = 定时任务名字


arms.alert.template.title.suffix = -报警模板
edas_vm_title_apm = EDAS控制台

arms.metric.fetch.fail = 获取指标失败
arms.query.timestamp.order.reversed = 开始时间大于截止时间
arms.query.parameters.empty = 有查询参数为空

arms.diagnosis.jvm.noConf = 当前未配置JVM内存启动参数
arms.diagnosis.jvm.recommend.fail = 计算推荐配置失败, K8S应用请设置内存上限

# diagnosis
arms.diagnosis.avg.timecost = 平均耗时
arms.diagnosis.call.count = 调用次数
arms.diagnosis.call.error.count = 错误调用次数

arms.diagnosis.change.startTime = 变更开始时间
arms.diagnosis.change.endTime = 变更结束时间
arms.diagnosis.change.detail = 变更概要

arms.diagnosis.thread.name = 线程名
arms.diagnosis.thread.stack = 线程栈
arms.diagnosis.thread.status = 线程状态
arms.diagnosis.thread.text1 = 采样周期内当前堆栈出现次数

arms.diagnosis.exception.count = 异常次数
arms.diagnosis.exception.detail = 异常概要
arms.diagnosis.exception.stack = 异常栈
arms.diagnosis.exception.type = 异常类型
arms.diagnosis.exception.increase = 突增异常
arms.diagnosis.exception.new = 新增异常

arms.diagnosis.threadpool.type = 线程池类型
arms.diagnosis.threadpool.name = 线程池名称
arms.diagnosis.threadpool.max.count = 最大线程数
arms.diagnosis.threadpool.current.count = 当前线程数
arms.diagnosis.threadpool.runnable.count = 运行线程数
arms.diagnosis.threadpool.queue.size = 任务队列长度

arms.diagnosis.trace.steps.current = 当前跳数
arms.diagnosis.trace.steps.daybefore = 一天前跳数
arms.diagnosis.trace.steps.weekBefore = 一周前跳数

arms.diagnosis.snapshot.interface.name = 接口名
arms.diagnosis.snapshot.timecost= 耗时
arms.diagnosis.snapshot.keystack = 关键耗时堆栈
arms.diagnosis.snapshot.nplusone.call = n+1调用分析
arms.diagnosis.snapshot.extInfo = 其他信息
arms.diagnosis.snapshot.exception = 异常信息
arms.diagnosis.snapshot.exception.method = 异常方法

arms.diagnosis.snapshot.recomendTraceId = 推荐TraceId
arms.diagnosis.snapshot.slowsnapshot.analysis.result = 慢调用快照分析结果
arms.diagnosis.snapshot.stack.analysis.result = 线程剖析分析结果
arms.diagnosis.snapshot.samples.cost=样本数/样本总耗时
arms.diagnosis.snapshot.slow.reason=出现慢调用的可能原因
arms.diagnosis.snapshot.slow.method=慢方法
arms.diagnosis.snapshot.slow.method.count.cost=所有样本中慢方法耗时占比
arms.diagnosis.snapshot.slow.method.stack=与方法相关出现的%d次的堆栈
arms.diagnosis.snapshot.checkTraceId=查看相关调用链
arms.diagnosis.snapshot.affectedMethod=根因


arms.diagnosis.report.template.rtDiagnosisTemplate.title = RT诊断报告
arms.diagnosis.report.template.rtDiagnosisTemplate.demarcation = 故障定界
arms.diagnosis.report.template.rtDiagnosisTemplate.rootCause = 根因分析
arms.diagnosis.report.template.rtDiagnosisTemplate.reason = 可能的原因
arms.diagnosis.report.template.rtDiagnosisTemplate.click = 点击查看下游报告
arms.diagnosis.report.template.rtDiagnosisTemplate.happenChange = 应用检测期间发生变更

arms.diagnosis.report.template.errorDiagnosisTemplate.title = 错误请求诊断报告
arms.diagnosis.click.detail = 点击查看详情

arms.diagnosis.arthas.profiler.start = 开始生成arthas火焰图
arms.diagnosis.arthas.profiler.finish = 生成arthas火焰图结束

arms.release.exception.contrast = 应用异常对比
arms.release.exception.avg.count = 平均次数
arms.release.exception.new.detail = 新增异常详情
arms.release.exception.count.before = 发布前平均次数
arms.release.exception.count.after = 发布后平均次数
arms.release.exception.detail.hind = 省略
arms.release.exception.increased.detail = 突增异常详情
arms.release.system.metric.contrast = 系统指标对比

arms.event.alert.template.appReleaseFailed.eventRule.name = 应用变更失败
arms.event.alert.template.appReleaseFailed.eventRule.description = EDAS应用变更失败相关事件，包括应用发布，应用扩缩容，应用配置变更等等
arms.event.alert.template.appReleaseFailed.eventRule.conf.alertDispatchRule.name = 应用发布失败-默认规则-事件中心
arms.event.alert.template.appReleaseFailed.eventRule.conf.alertDispatchRule.msgTemplate = EDAS应用变更失败\n应用名:{appName}\n变更类型:{type}\n变更情况:{version}\n执行发布帐号 :{secondaryUser}\n执行发布用户所属主帐号:{primaryUser}

arms.event.alert.template.appScale.eventRule.name = 应用扩缩容
arms.event.alert.template.appScale.eventRule.description = EDAS-K8S应用触发EDAS弹性规则发生扩缩容或者通过EDAS界面手动扩缩容相关k8s事件
arms.event.alert.template.appScale.eventRule.conf.alertDispatchRule.name = 应用扩缩容-默认规则-事件中心
arms.event.alert.template.appScale.eventRule.conf.alertDispatchRule.msgTemplate = 应用发生扩缩容\n应用名:{appName}\n扩缩容详情:{message}

arms.event.alert.template.appScale.reachLimit.eventRule.name = 应用扩缩容到达上下限
arms.event.alert.template.appScale.reachLimit.eventRule.description = EDAS-K8S应用触发EDAS弹性规则触发的扩容到达了设置的实例数量上下限
arms.event.alert.template.appScale.reachLimit.eventRule.conf.alertDispatchRule.name = 应用扩缩容到达上下限-默认规则-事件中心
arms.event.alert.template.appScale.reachLimit.eventRule.conf.alertDispatchRule.msgTemplate = 应用扩缩容到达上下限\n应用名:{appName}\n扩缩容详情:{message}


arms.event.alert.template.outlier.eventRule.name = 离群摘除
arms.event.alert.template.outlier.eventRule.description = 应用作为RPC客户端调用服务端错误率超过配置阈值，触发离群摘除相关事件
arms.event.alert.template.outlier.eventRule.conf.alertDispatchRule.name = 离群摘除-默认规则-事件中心
arms.event.alert.template.outlier.eventRule.conf.alertDispatchRule.msgTemplate = 发生离群摘除事件\n客户端应用:{appName}\n摘除详情:{summary}

arms.event.alert.template.podStartFailed.eventRule.name = pod启动失败
arms.event.alert.template.podStartFailed.eventRule.description = POD因为自身原因持续启动失败相关事件
arms.event.alert.template.podStartFailed.eventRule.conf.alertDispatchRule.name = pod启动失败-默认规则-事件中心
arms.event.alert.template.podStartFailed.eventRule.conf.alertDispatchRule.msgTemplate = Pod启动失败\npod:{podName}\nnamespace:{namespace}\n集群id:{clusterId}\n集群名称:{clusterName}\n归属应用:{appName}

arms.event.alert.template.imagePullBackOff.eventRule.name = 镜像拉取失败
arms.event.alert.template.imagePullBackOff.eventRule.description = 镜像拉取失败
arms.event.alert.template.imagePullBackOff.eventRule.conf.alertDispatchRule.name = 镜像拉取失败-默认规则-事件中心
arms.event.alert.template.imagePullBackOff.eventRule.conf.alertDispatchRule.msgTemplate = Pod镜像拉取失败\npod:{podName}\nnamespace:{namespace}\n集群id:{clusterId}\n集群名称:{clusterName}\n归属应用:{appName}

arms.event.alert.template.podEvict.eventRule.name = POD被驱逐
arms.event.alert.template.podEvict.eventRule.description = POD因为集群计算存储等资源不足导致POD被重新调度到其他节点触发的驱逐相关事件
arms.event.alert.template.podEvict.eventRule.conf.alertDispatchRule.name = POD被驱逐-默认规则-事件中心
arms.event.alert.template.podEvict.eventRule.conf.alertDispatchRule.msgTemplate = Pod被驱逐\npod:{podName}\nnamespace:{namespace}\n原因:{reason}\n集群id:{clusterId}\n集群名称:{clusterName}\n归属应用:{appName}

arms.event.alert.template.podOOM.eventRule.name = POD OOM
arms.event.alert.template.podOOM.eventRule.description = POD 因为使用内存大于配置文件中申明的内存limit值被Kill相关事件
arms.event.alert.template.podOOM.eventRule.conf.alertDispatchRule.name = POD-OOM-默认规则-事件中心
arms.event.alert.template.podOOM.eventRule.conf.alertDispatchRule.msgTemplate = Pod OOM\npod:{podName}\nnamespace:{namespace}\n集群id:{clusterId}\n集群名称:{clusterName}\n归属应用:{appName}

arms.event.alert.template.insufficient.eventRule.name = K8S集群资源不足
arms.event.alert.template.insufficient.eventRule.description = K8S集群资源不足导致调度pod失败相关事件
arms.event.alert.template.insufficient.eventRule.conf.alertDispatchRule.name = 集群资源不足-默认规则-事件中心
arms.event.alert.template.insufficient.eventRule.conf.alertDispatchRule.msgTemplate = k8s集群资源不足\npod:{podName}\nnamespace:{namespace}\n集群id:{clusterId}\n集群名称:{clusterName}\n归属应用:{appName}

arms.event.alert.template.nodeoom.eventRule.name = K8S节点OOM
arms.event.alert.template.nodeoom.eventRule.description = K8S节点Out Of Memory
arms.event.alert.template.nodeoom.eventRule.conf.alertDispatchRule.name = 集群节点OOM-默认规则-事件中心
arms.event.alert.template.nodeoom.eventRule.conf.alertDispatchRule.msgTemplate = k8s集群节点OOM\nOOM节点:{nodeName}\n集群id:{clusterId}\n集群名称:{clusterName}

arms.event.alert.template.nodereboot.eventRule.name = K8S节点重启
arms.event.alert.template.nodereboot.eventRule.description = K8S节点重启
arms.event.alert.template.nodereboot.eventRule.conf.alertDispatchRule.name = 集群节点重启-默认规则-事件中心
arms.event.alert.template.nodereboot.eventRule.conf.alertDispatchRule.msgTemplate = k8s集群节点重启\n重启节点:{nodeName}\n集群id:{clusterId}\n集群名称:{clusterName}

arms.event.alert.template.fdPressure.eventRule.name = K8S节点FD不足
arms.event.alert.template.fdPressure.eventRule.description = K8S节点文件描述符不足
arms.event.alert.template.fdPressure.eventRule.conf.alertDispatchRule.name = 集群节点FD不足-默认规则-事件中心
arms.event.alert.template.fdPressure.eventRule.conf.alertDispatchRule.msgTemplate = k8s集群节点FD不足\n问题节点:{nodeName}\n集群id:{clusterId}\n集群名称:{clusterName}\n事件详情:{summary}

arms.event.alert.template.ipPressure.eventRule.name = K8S集群IP不足
arms.event.alert.template.ipPressure.eventRule.description = K8S集群IP不足
arms.event.alert.template.ipPressure.eventRule.conf.alertDispatchRule.name = 集群节点IP不足-默认规则-事件中心
arms.event.alert.template.ipPressure.eventRule.conf.alertDispatchRule.msgTemplate = 8s集群节点IP不足\n类型:{kind}\nname:{name}\n集群id:{clusterId}\n集群名称:{clusterName}\n事件详情:{summary}

arms.grafana.dashboards.application = 应用
arms.grafana.dashboards.api = 接口
arms.grafana.dashboards.machine = 机器
arms.grafana.dashboards.db = DB
arms.grafana.dashboards.application.comparison = Application Metrics With Tag

arms.prom.cloudproduct.checkopenprom = 未开通Prometheus

arms.event.v2.source.arms.name=ARMS
arms.event.v2.source.edas.name=EDAS
arms.event.v2.source.mse.name=MSE
arms.event.v2.source.alert.name=alert 
arms.event.v2.source.das.name=DAS
arms.event.v2.source.cms.name=CMS
arms.event.v2.source.actiontrail.name=actiontrail
arms.event.v2.source.k8s.name=k8s
arms.event.v2.source.custom.name=用户自定义
arms.event.v2.source.arms.desc=ARMS(应用实时监控服务)上报的事件, 包括应用OOM、应用死锁、应用所在机器磁盘满等等。
arms.event.v2.source.edas.desc=EDAS(企业级分布式应用管理)上报的事件, 包括应用发布、应用回滚、应用扩缩容等等。
arms.event.v2.source.mse.desc=MSE(微服务引擎)上报的事件, 包括触发离群摘除、触发无损下线等等。
arms.event.v2.source.alert.desc=报警规则触发产生的事件, 包括应用监控报警、前端监控报警、prometheus报警等等 
arms.event.v2.source.das.desc=DAS(数据库自治服务)的事件，包括慢sql事件、库表优化，数据库进程CRASH事件等等
arms.event.v2.source.cms.desc=CMS(云监控)的事件，包括ECS重启、SLB释放等操作, [详情](https://help.aliyun.com/document_detail/167388.htm?spm=a2c4g.11186623.0.0.4eec776dPaUg98#concept-2500373)
arms.event.v2.source.actiontrail.desc=actiontrail(操作审计)，用户一些高危API调用记录, [详情](https://help.aliyun.com/document_detail/28820.html)，
arms.event.v2.source.k8s.desc=k8s上报的事件, 包括镜像拉取失败，容器启动失败等等。
arms.event.v2.source.custom.desc=用户自定义上报事件。
arms.event.v2.kind.information.name=消息
arms.event.v2.kind.issue.name=问题
arms.event.v2.kind.change.name=变更
arms.event.v2.kind.information.desc=代表一些通知类消息，比如应用重启、离群摘除等等
arms.event.v2.kind.issue.desc=代表一些待解决的问题，比如应用RT突增、应用报警被触发等等
arms.event.v2.kind.change.desc=代表一些变更动作，比如应用发布、扩缩容量、应用配置变更等等
arms.event.v2.type.armsUserAction.name=ARMS用户操作
arms.event.v2.type.agentReportIncident.name=agent上报的事件
arms.event.v2.type.agentDetectedIssue.name=agent检测的问题
arms.event.v2.type.mseOperation.name=mse操作
arms.event.v2.type.k8sWarning.name=Warning事件(k8s)
arms.event.v2.type.k8sNormal.name=Normal事件(k8s)
arms.event.v2.type.alert.name=报警
arms.event.v2.type.actionTrail.name=操作审计
arms.event.v2.type.cmsEvent.critical.name=云监控critical事件
arms.event.v2.type.cmsEvent.warn.name=云监控warn事件
arms.event.v2.type.cmsEvent.normal.name=云监控normal事件
arms.event.v2.type.das.timeseriesanomalydetection.name=DAS时序指标异常事件
arms.event.v2.type.das.badrequestdetection.name=DAS数据库语句异常事件
arms.event.v2.type.das.autoresourceoptimize.name=DAS资源可优化事件
arms.event.v2.type.das.instanceabnormaldetection.name=DAS数据库实例OOM事件
arms.event.v2.type.armsUserAction.desc=用户在ARMS控制台执行的一些重要动作，比如agent配置修改、删除应用等等
arms.event.v2.type.agentReportIncident.desc=agent上报的事件，比如agent挂载成功
arms.event.v2.type.agentDetectedIssue.desc=agent检测到的一些问题，比如OOM、死锁等等
arms.event.v2.type.mseOperation.desc=mse的事件、比如离群摘除、无损下线等等
arms.event.v2.type.k8sWarning.desc=k8s集群中的Warning事件
arms.event.v2.type.k8sNormal.desc=k8s集群中的Normal事件
arms.event.v2.type.alert.desc=报警事件、包含应用监控报警、前端监控报警、prometheus报警等等
arms.event.v2.type.actionTrail.desc=用户通过控制台或者API接口操作阿里云资源记录
arms.event.v2.type.cmsEvent.critical.desc=云监控中存储的critical级别事件
arms.event.v2.type.cmsEvent.warn.desc=云监控中存储的warn级别事件
arms.event.v2.type.cmsEvent.normal.desc=云监控中存储的normal级别事件
arms.event.v2.type.das.timeseriesanomalydetection.desc=DAS检测到数据库指标异常事件
arms.event.v2.type.das.badrequestdetection.desc=DAS检测到sql语句异常可调优事件
arms.event.v2.type.das.autoresourceoptimize.desc=DAS检测到资源使用可以优化事件
arms.event.v2.type.das.instanceabnormaldetection.desc=DAS检测到数据库实例出现OOM的事件

arms.event.v2.type.oom.name=应用抛出OOM异常
arms.event.v2.type.deadlock.name=应用出现线程死锁
arms.event.v2.type.attached.name=应用挂载探针成功
arms.event.v2.type.configModified.name=应用探针配置改动
arms.event.v2.type.rtIncrease.name=应用RT突增
arms.event.v2.type.topRtIncrease.name=应用TopN接口RT突增
arms.event.v2.type.errorIncrease.name=应用错误突增
arms.event.v2.type.topErrorIncrease.name=应用TopN接口错误突增
arms.event.v2.type.exceptionIncrease.name=异常异常突增
arms.event.v2.type.topExceptionIncrease.name=TopN接口异常突增
arms.event.v2.type.flowUneven.name=应用流量不均
arms.event.v2.type.memoryLeak.name=应用内存泄漏
arms.event.v2.type.podRestart.name=应用POD频繁重启
arms.event.v2.type.edas.changeorder.name=EDAS发布单事件
arms.event.v2.type.edas.createApp.name=创建应用
arms.event.v2.type.edas.deleteApp.name=删除应用
arms.event.v2.type.edas.start.name=启动机器
arms.event.v2.type.edas.stop.name=停止机器
arms.event.v2.type.edas.restart.name=重启
arms.event.v2.type.edas.deploy.name=部署应用
arms.event.v2.type.edas.reset.name=重制机器
arms.event.v2.type.edas.rollback.name=回滚
arms.event.v2.type.edas.scaleIn.name=缩容
arms.event.v2.type.edas.scaleOut.name=扩容
arms.event.v2.type.edas.changeGroup.name=改变分组
arms.event.v2.type.edas.bindSLB.name=绑定SLB
arms.event.v2.type.edas.unbindSLB.name=解绑SLB
arms.event.v2.type.edas.modifySLB.name=修改SLB
arms.event.v2.type.edas.bindECSSLB.name=绑定ECS SLB
arms.event.v2.type.edas.unbindECSSLB.name=解绑ECS SLB
arms.event.v2.type.edas.bindNAS.name=绑定NAS
arms.event.v2.type.edas.unbindNAS.name=解绑NAS
arms.event.v2.type.edas.modifyNAS.name=修改NAS
arms.event.v2.type.edas.clusterScaleOut.name=集群扩容
arms.event.v2.type.edas.enableTengine.name=开启流量管理
arms.event.v2.type.edas.disableTengine.name=关闭流量管理
arms.event.v2.type.edas.restartApplication.name=重启应用
arms.event.v2.type.edas.startApplication.name=启动应用
arms.event.v2.type.edas.stopApplication.name=停止应用
arms.event.v2.type.edas.rescaleApplicationVertically.name=调整实例规格
arms.event.v2.type.edas.serviceDiffer.name=服务契约变动
arms.event.v2.type.oom.desc=探针检测到应用抛出OutOfMemoryError
arms.event.v2.type.deadlock.desc=探针检测到应用中出现线程死锁
arms.event.v2.type.attached.desc=探针挂载成功
arms.event.v2.type.configModified.desc=在ARMS控制台修改应用的探针配置
arms.event.v2.type.rtIncrease.desc=Insight检测到应用RT出现突增
arms.event.v2.type.topRtIncrease.desc=Insight检测到应用TopN接口RT突增
arms.event.v2.type.errorIncrease.desc=Insight检测到应用的错误率出现突增
arms.event.v2.type.topErrorIncrease.desc=Insight检测到应用TopN接口错误突增
arms.event.v2.type.exceptionIncrease.desc=Insight检测到异常异常突增
arms.event.v2.type.topExceptionIncrease.desc=Insight检测到TopN接口异常突增
arms.event.v2.type.flowUneven.desc=Insight检测到应用的流量不均匀
arms.event.v2.type.memoryLeak.desc=Insight检测到应用出现内存泄漏
arms.event.v2.type.podRestart.desc=Insight检测到应用POD频繁重启
arms.event.v2.type.edas.changeorder.desc=EDAS发布单事件
arms.event.v2.type.edas.createApp.desc=创建应用
arms.event.v2.type.edas.deleteApp.desc=删除应用
arms.event.v2.type.edas.start.desc=启动机器
arms.event.v2.type.edas.stop.desc=停止机器
arms.event.v2.type.edas.restart.desc=重启
arms.event.v2.type.edas.deploy.desc=部署应用
arms.event.v2.type.edas.reset.desc=重制机器
arms.event.v2.type.edas.rollback.desc=回滚
arms.event.v2.type.edas.scaleIn.desc=缩容
arms.event.v2.type.edas.scaleOut.desc=扩容
arms.event.v2.type.edas.changeGroup.desc=改变分组
arms.event.v2.type.edas.bindSLB.desc=绑定SLB
arms.event.v2.type.edas.unbindSLB.desc=解绑SLB
arms.event.v2.type.edas.modifySLB.desc=修改SLB
arms.event.v2.type.edas.bindECSSLB.desc=绑定ECS SLB
arms.event.v2.type.edas.unbindECSSLB.desc=解绑ECS SLB
arms.event.v2.type.edas.bindNAS.desc=绑定NAS
arms.event.v2.type.edas.unbindNAS.desc=解绑NAS
arms.event.v2.type.edas.modifyNAS.desc=修改NAS
arms.event.v2.type.edas.clusterScaleOut.desc=集群扩容
arms.event.v2.type.edas.enableTengine.desc=开启流量管理
arms.event.v2.type.edas.disableTengine.desc=关闭流量管理
arms.event.v2.type.edas.restartApplication.desc=重启应用
arms.event.v2.type.edas.startApplication.desc=启动应用
arms.event.v2.type.edas.stopApplication.desc=停止应用
arms.event.v2.type.edas.rescaleApplicationVertically.desc=调整实例规格
arms.event.v2.type.edas.serviceDiffer.desc=服务契约变动

arms.alertRuleTemplateService.convertAlertRuleToTemplate.description="由告警规则另存为告警规则模板。";



# 创建联系人
# CONTACT_MEMBER_SAVE("arms:SaveContactMember"),
# ARMS_CREATE_CONTACT("arms:CreateContact"),
# ARMS_CREATE_ALERT_CONTACT("arms:CreateAlertContact"),
mappings.ARMS_CREATE_CONTACT.alias[0]=CONTACT_MEMBER_SAVE
mappings.ARMS_CREATE_CONTACT.alias[1]=ARMS_CREATE_ALERT_CONTACT
mappings.ARMS_CREATE_CONTACT.methods[0].path=/console/v1/contact/add.json
mappings.ARMS_CREATE_CONTACT.methods[0].method=POST
mappings.ARMS_CREATE_CONTACT.methods[0].methodName=添加联系人
mappings.ARMS_CREATE_CONTACT.methods[1].path=/console/v1/contact/webhook/add.json
mappings.ARMS_CREATE_CONTACT.methods[1].method=POST
mappings.ARMS_CREATE_CONTACT.methods[1].methodName=添加webhook
mappings.ARMS_CREATE_CONTACT.methods[2].path=/console/v1/robot/add.json
mappings.ARMS_CREATE_CONTACT.methods[2].method=POST
mappings.ARMS_CREATE_CONTACT.methods[2].methodName=添加机器人
mappings.ARMS_CREATE_CONTACT.methods[3].path=/console/v1/robot/addRobot.json
mappings.ARMS_CREATE_CONTACT.methods[3].method=POST
mappings.ARMS_CREATE_CONTACT.methods[3].methodName=添加机器人pop接口

# 创建webhook
mappings.ARMS_CREATE_WEBHOOK.methods[0].path=/console/v1/contact/webhook/add.json
mappings.ARMS_CREATE_WEBHOOK.methods[0].method=POST
mappings.ARMS_CREATE_WEBHOOK.methods[0].methodName=

# 删除联系人
# ARMS_DELETE_CONTACT("arms:DeleteContact"),
# ARMS_DELETE_ALERT_CONTACT("arms:DeleteAlertContact"),
# CONTACT_MEMBER_DELETE("arms:DeleteContactMember"),
mappings.ARMS_DELETE_CONTACT.alias[0]=ARMS_DELETE_ALERT_CONTACT
mappings.ARMS_DELETE_CONTACT.alias[1]=CONTACT_MEMBER_DELETE
mappings.ARMS_DELETE_CONTACT.methods[0].path=/console/v1/contact/delete.json
mappings.ARMS_DELETE_CONTACT.methods[0].method=DELETE
mappings.ARMS_DELETE_CONTACT.methods[0].methodName=
mappings.ARMS_DELETE_CONTACT.methods[1].path=/console/v1/contact/batchDelete.json
mappings.ARMS_DELETE_CONTACT.methods[1].method=POST
mappings.ARMS_DELETE_CONTACT.methods[1].methodName=
mappings.ARMS_DELETE_CONTACT.methods[2].path=/console/v1/robot/delete.json
mappings.ARMS_DELETE_CONTACT.methods[2].method=DELETE
mappings.ARMS_DELETE_CONTACT.methods[2].methodName=

# 更新联系人
# ARMS_UPDATE_CONTACT("arms:UpdateContact"),
# ARMS_UPDATE_ALERT_CONTACT("arms:UpdateAlertContact"),
# CONTACT_MEMBER_UPDATE("arms:UpdateContactMember"),
mappings.ARMS_UPDATE_CONTACT.alias[0]=ARMS_UPDATE_ALERT_CONTACT
mappings.ARMS_UPDATE_CONTACT.alias[1]=CONTACT_MEMBER_DELETE
mappings.ARMS_UPDATE_CONTACT.methods[0].path=/console/v1/contact/update.json
mappings.ARMS_UPDATE_CONTACT.methods[0].method=POST
mappings.ARMS_UPDATE_CONTACT.methods[0].methodName=
mappings.ARMS_UPDATE_CONTACT.methods[1].path=/console/v1/contact/webhook/update.json
mappings.ARMS_UPDATE_CONTACT.methods[1].method=POST
mappings.ARMS_UPDATE_CONTACT.methods[1].methodName=
mappings.ARMS_UPDATE_CONTACT.methods[2].path=/console/v1/contact/webhook/updateTTSReissue.json
mappings.ARMS_UPDATE_CONTACT.methods[2].method=POST
mappings.ARMS_UPDATE_CONTACT.methods[2].methodName=
mappings.ARMS_UPDATE_CONTACT.methods[3].path=/console/v1/robot/update.json
mappings.ARMS_UPDATE_CONTACT.methods[3].method=POST
mappings.ARMS_UPDATE_CONTACT.methods[3].methodName=

# 更新webhook
# ARMS_UPDATE_WEBHOOK("arms:UpdateWebhook"),
mappings.ARMS_UPDATE_WEBHOOK.methods[0].path=/console/v1/contact/webhook/update.json
mappings.ARMS_UPDATE_WEBHOOK.methods[0].method=POST
mappings.ARMS_UPDATE_WEBHOOK.methods[0].methodName=

# 创建联系人分组
# ARMS_CREATE_CONTACT_GROUP("arms:CreateContactGroup"),
# ARMS_CREATE_ALERT_CONTACT_GROUP("arms:CreateAlertContactGroup"),
# CONTACT_GROUP_SAVE("arms:SaveContactGroup"),
mappings.ARMS_CREATE_CONTACT_GROUP.alias[0]=ARMS_CREATE_ALERT_CONTACT_GROUP
mappings.ARMS_CREATE_CONTACT_GROUP.alias[1]=CONTACT_GROUP_SAVE
mappings.ARMS_CREATE_CONTACT_GROUP.methods[0].path=/console/v1/contactGroup/add.json
mappings.ARMS_CREATE_CONTACT_GROUP.methods[0].method=POST
mappings.ARMS_CREATE_CONTACT_GROUP.methods[0].methodName=
mappings.ARMS_CREATE_CONTACT_GROUP.methods[1].path=/console/v1/contactGroup/addContactGroup.json
mappings.ARMS_CREATE_CONTACT_GROUP.methods[1].method=POST
mappings.ARMS_CREATE_CONTACT_GROUP.methods[1].methodName=

# 删除联系人分组
# ARMS_DELETE_CONTACT_GROUP("arms:DeleteContactGroup"),
# ARMS_DELETE_ALERT_CONTACT_GROUP("arms:DeleteAlertContactGroup"),
# CONTACT_GROUP_DELETE("arms:DeleteContactGroup"),
mappings.ARMS_DELETE_CONTACT_GROUP.alias[0]=ARMS_DELETE_ALERT_CONTACT_GROUP
mappings.ARMS_DELETE_CONTACT_GROUP.alias[1]=CONTACT_GROUP_DELETE
mappings.ARMS_DELETE_CONTACT_GROUP.methods[0].path=/console/v1/contactGroup/delete.json
mappings.ARMS_DELETE_CONTACT_GROUP.methods[0].method=DELETE
mappings.ARMS_DELETE_CONTACT_GROUP.methods[0].methodName=

# 修改联系人分组
# ARMS_UPDATE_CONTACT_GROUP("arms:UpdateContactGroup"),
# ARMS_UPDATE_ALERT_CONTACT_GROUP("arms:UpdateAlertContactGroup"),
# CONTACT_LINK_DELETE("arms:DeleteContactLink"),
# CONTACT_GROUP_UPDATE("arms:UpdateContactGroup"),
mappings.ARMS_UPDATE_CONTACT_GROUP.alias[0]=ARMS_UPDATE_ALERT_CONTACT_GROUP
mappings.ARMS_UPDATE_CONTACT_GROUP.alias[1]=CONTACT_LINK_DELETE
mappings.ARMS_UPDATE_CONTACT_GROUP.alias[2]=CONTACT_GROUP_UPDATE
mappings.ARMS_UPDATE_CONTACT_GROUP.methods[0].path=/console/v1/contactGroup/update.json
mappings.ARMS_UPDATE_CONTACT_GROUP.methods[0].method=POST
mappings.ARMS_UPDATE_CONTACT_GROUP.methods[0].methodName=
mappings.ARMS_UPDATE_CONTACT_GROUP.methods[1].path=/console/v1/contactGroup/contact/delete.json
mappings.ARMS_UPDATE_CONTACT_GROUP.methods[1].method=DELETE
mappings.ARMS_UPDATE_CONTACT_GROUP.methods[1].methodName=
mappings.ARMS_UPDATE_CONTACT_GROUP.methods[2].path=/console/v1/contactGroup/contact/updateContactGroup.json
mappings.ARMS_UPDATE_CONTACT_GROUP.methods[2].method=POST
mappings.ARMS_UPDATE_CONTACT_GROUP.methods[2].methodName=

# 创建通知策略
# ARMS_CREATE_DISPATCH_RULE("arms:CreateDispatchRule"),
mappings.ARMS_CREATE_DISPATCH_RULE.alias[0]=ARMS_CREATE_NOTIFICATION_POLICY
mappings.ARMS_CREATE_DISPATCH_RULE.methods[0].path=/console/v1/dispatch/add.json
mappings.ARMS_CREATE_DISPATCH_RULE.methods[0].method=POST
mappings.ARMS_CREATE_DISPATCH_RULE.methods[0].methodName=
mappings.ARMS_CREATE_DISPATCH_RULE.methods[1].path=/console/v1/dispatch/create.json
mappings.ARMS_CREATE_DISPATCH_RULE.methods[1].method=POST
mappings.ARMS_CREATE_DISPATCH_RULE.methods[1].methodName=
mappings.ARMS_CREATE_DISPATCH_RULE.methods[2].path=/console/v1/dispatch/import.json
mappings.ARMS_CREATE_DISPATCH_RULE.methods[2].method=POST
mappings.ARMS_CREATE_DISPATCH_RULE.methods[2].methodName=

# 删除通知策略
# ARMS_DELETE_DISPATCH_RULE("arms:DeleteDispatchRule"),
mappings.ARMS_DELETE_DISPATCH_RULE.alias[0]=ARMS_DELETE_NOTIFICATION_POLICY
mappings.ARMS_DELETE_DISPATCH_RULE.methods[0].path=/console/v1/dispatch/delete.json
mappings.ARMS_DELETE_DISPATCH_RULE.methods[0].method=DELETE
mappings.ARMS_DELETE_DISPATCH_RULE.methods[0].methodName=

# 更新通知策略
# ARMS_UPDATE_DISPATCH_RULE("arms:UpdateDispatchRule"),
mappings.ARMS_UPDATE_DISPATCH_RULE.alias[0]=ARMS_UPDATE_NOTIFICATION_POLICY
mappings.ARMS_UPDATE_DISPATCH_RULE.methods[0].path=/console/v1/dispatch/update.json
mappings.ARMS_UPDATE_DISPATCH_RULE.methods[0].method=POST
mappings.ARMS_UPDATE_DISPATCH_RULE.methods[0].methodName=
mappings.ARMS_UPDATE_DISPATCH_RULE.methods[1].path=/console/v1/dispatch/updateConditions.json
mappings.ARMS_UPDATE_DISPATCH_RULE.methods[1].method=POST
mappings.ARMS_UPDATE_DISPATCH_RULE.methods[1].methodName=
mappings.ARMS_UPDATE_DISPATCH_RULE.methods[2].path=/console/v1/dispatch/updateByName.json
mappings.ARMS_UPDATE_DISPATCH_RULE.methods[2].method=POST
mappings.ARMS_UPDATE_DISPATCH_RULE.methods[2].methodName=
mappings.ARMS_UPDATE_DISPATCH_RULE.methods[3].path=/console/v1/dispatch/modify/state.json
mappings.ARMS_UPDATE_DISPATCH_RULE.methods[3].method=POST
mappings.ARMS_UPDATE_DISPATCH_RULE.methods[3].methodName=

# 创建排班策略
# ARMS_CREATE_ON_CALL_SCHEDULE("arms:CreateOnCallSchedule"),
mappings.ARMS_CREATE_ON_CALL_SCHEDULE.methods[0].path=/console/v1/contactSchedule/add.json
mappings.ARMS_CREATE_ON_CALL_SCHEDULE.methods[0].method=POST
mappings.ARMS_CREATE_ON_CALL_SCHEDULE.methods[0].methodName=

# 更新排班策略
# ARMS_UPDATE_ON_CALL_SCHEDULE("arms:UpdateOnCallSchedule"),
mappings.ARMS_UPDATE_ON_CALL_SCHEDULE.methods[0].path=/console/v1/contactSchedule/update.json
mappings.ARMS_UPDATE_ON_CALL_SCHEDULE.methods[0].method=POST
mappings.ARMS_UPDATE_ON_CALL_SCHEDULE.methods[0].methodName=

# 删除排班策略
# ARMS_DELETE_ON_CALL_SCHEDULE("arms:DeleteOnCallSchedule"),
mappings.ARMS_DELETE_ON_CALL_SCHEDULE.methods[0].path=/console/v1/contactSchedule/delete.json
mappings.ARMS_DELETE_ON_CALL_SCHEDULE.methods[0].method=DELETE
mappings.ARMS_DELETE_ON_CALL_SCHEDULE.methods[0].methodName=

# 集成相关接口
# ARMS_ADD_INTEGRATION("arms:AddIntegration"),
# ARMS_DELETE_INTEGRATION("arms:DeleteIntegration"),
# ARMS_UPDATE_INTEGRATION("arms:UpdateIntegration"),
mappings.ARMS_ADD_INTEGRATION.methods[0].path=/console/v1/integration/add.json
mappings.ARMS_ADD_INTEGRATION.methods[0].method=POST
mappings.ARMS_ADD_INTEGRATION.methods[0].methodName=
mappings.ARMS_ADD_INTEGRATION.methods[1].path=/console/v1/itsm/aone/add.json
mappings.ARMS_ADD_INTEGRATION.methods[1].method=POST
mappings.ARMS_ADD_INTEGRATION.methods[1].methodName=
mappings.ARMS_ADD_INTEGRATION.methods[2].path=/console/v1/itsm/eb/add.json
mappings.ARMS_ADD_INTEGRATION.methods[2].method=POST
mappings.ARMS_ADD_INTEGRATION.methods[2].methodName=
mappings.ARMS_ADD_INTEGRATION.methods[3].path=/console/v1/itsm/jira/add.json
mappings.ARMS_ADD_INTEGRATION.methods[3].method=POST
mappings.ARMS_ADD_INTEGRATION.methods[3].methodName=
mappings.ARMS_DELETE_INTEGRATION.methods[0].path=/console/v1/integration/remove.json
mappings.ARMS_DELETE_INTEGRATION.methods[0].method=GET
mappings.ARMS_DELETE_INTEGRATION.methods[0].methodName=
mappings.ARMS_DELETE_INTEGRATION.methods[1].path=/console/v1/itsm/remove.json
mappings.ARMS_DELETE_INTEGRATION.methods[1].method=DELETE
mappings.ARMS_DELETE_INTEGRATION.methods[1].methodName=
mappings.ARMS_UPDATE_INTEGRATION.methods[0].path=/console/v1/integration/update.json
mappings.ARMS_UPDATE_INTEGRATION.methods[0].method=POST
mappings.ARMS_UPDATE_INTEGRATION.methods[0].methodName=
mappings.ARMS_UPDATE_INTEGRATION.methods[1].path=/console/v1/integration/update/token.json
mappings.ARMS_UPDATE_INTEGRATION.methods[1].method=GET
mappings.ARMS_UPDATE_INTEGRATION.methods[1].methodName=
mappings.ARMS_UPDATE_INTEGRATION.methods[2].path=/console/v1/integration/repost.json
mappings.ARMS_UPDATE_INTEGRATION.methods[2].method=POST
mappings.ARMS_UPDATE_INTEGRATION.methods[2].methodName=
mappings.ARMS_UPDATE_INTEGRATION.methods[3].path=/console/v1/integration/unRepost.json
mappings.ARMS_UPDATE_INTEGRATION.methods[3].method=POST
mappings.ARMS_UPDATE_INTEGRATION.methods[3].methodName=
mappings.ARMS_UPDATE_INTEGRATION.methods[4].path=/console/v1/integration/uploadEvents.json
mappings.ARMS_UPDATE_INTEGRATION.methods[4].method=POST
mappings.ARMS_UPDATE_INTEGRATION.methods[4].methodName=
mappings.ARMS_UPDATE_INTEGRATION.methods[5].path=/console/v1/itsm/aone/update.json
mappings.ARMS_UPDATE_INTEGRATION.methods[5].method=POST
mappings.ARMS_UPDATE_INTEGRATION.methods[5].methodName=
mappings.ARMS_UPDATE_INTEGRATION.methods[6].path=/console/v1/itsm/eb/update.json
mappings.ARMS_UPDATE_INTEGRATION.methods[6].method=POST
mappings.ARMS_UPDATE_INTEGRATION.methods[6].methodName=
mappings.ARMS_UPDATE_INTEGRATION.methods[7].path=/console/v1/itsm/jira/update.json
mappings.ARMS_UPDATE_INTEGRATION.methods[7].method=POST
mappings.ARMS_UPDATE_INTEGRATION.methods[7].methodName=

# 升级策略相关接口
#    ARMS_DESCRIBE_ESCALATION_POLICY("arms:DescribeEscalationPolicy"),
#    ARMS_CREATE_ESCALATION_POLICY("arms:CreateEscalationPolicy"),
#    ARMS_UPDATE_ESCALATION_POLICY("arms:UpdateEscalationPolicy"),
#    ARMS_DELETE_ESCALATION_POLICY("arms:DeleteEscalationPolicy"),
mappings.ARMS_CREATE_ESCALATION_POLICY.methods[0].path=/console/v1/escalation/add.json
mappings.ARMS_CREATE_ESCALATION_POLICY.methods[0].method=POST
mappings.ARMS_CREATE_ESCALATION_POLICY.methods[0].methodName=
mappings.ARMS_UPDATE_ESCALATION_POLICY.methods[0].path=/console/v1/escalation/update.json
mappings.ARMS_UPDATE_ESCALATION_POLICY.methods[0].method=POST
mappings.ARMS_UPDATE_ESCALATION_POLICY.methods[0].methodName=
mappings.ARMS_DELETE_ESCALATION_POLICY.methods[0].path=/console/v1/escalation/delete.json
mappings.ARMS_DELETE_ESCALATION_POLICY.methods[0].method=GET
mappings.ARMS_DELETE_ESCALATION_POLICY.methods[0].methodName=

#  事件处理流相关接口
#    ARMS_DESCRIBE_INCIDENT_WORKFLOW("arms:DescribeIncidentWorkFlow"),
#    ARMS_CREATE_INCIDENT_WORKFLOW("arms:CreateIncidentWorkFlow"),
#    ARMS_UPDATE_INCIDENT_WORKFLOW("arms:UpdateIncidentWorkFlow"),
#    ARMS_DELETE_INCIDENT_WORKFLOW("arms:DeleteIncidentWorkFlow"),
mappings.ARMS_CREATE_INCIDENT_WORKFLOW.methods[0].path=/console/v1/incidentWf/add.json
mappings.ARMS_CREATE_INCIDENT_WORKFLOW.methods[0].method=POST
mappings.ARMS_CREATE_INCIDENT_WORKFLOW.methods[0].methodName=
mappings.ARMS_UPDATE_INCIDENT_WORKFLOW.methods[0].path=/console/v1/incidentWf/update.json
mappings.ARMS_UPDATE_INCIDENT_WORKFLOW.methods[0].method=POST
mappings.ARMS_UPDATE_INCIDENT_WORKFLOW.methods[0].methodName=
mappings.ARMS_UPDATE_INCIDENT_WORKFLOW.methods[1].path=/console/v1/incidentWf/move.json
mappings.ARMS_UPDATE_INCIDENT_WORKFLOW.methods[1].method=POST
mappings.ARMS_UPDATE_INCIDENT_WORKFLOW.methods[1].methodName=
mappings.ARMS_DELETE_INCIDENT_WORKFLOW.methods[0].path=/console/v1/incidentWf/delete.json
mappings.ARMS_DELETE_INCIDENT_WORKFLOW.methods[0].method=DELETE
mappings.ARMS_DELETE_INCIDENT_WORKFLOW.methods[0].methodName=

# 商业化配置
#  ARMS_UPDATE_ALERT_COMMERCIAL_CONFIG("arms:UpdateAlertCommercialConfig"),
mappings.ARMS_UPDATE_ALERT_COMMERCIAL_CONFIG.methods[0].path=/console/v1/commercial/updateLimit.json
mappings.ARMS_UPDATE_ALERT_COMMERCIAL_CONFIG.methods[0].method=POST
mappings.ARMS_UPDATE_ALERT_COMMERCIAL_CONFIG.methods[0].methodName=
